// automatically generated by the FlatBuffers compiler, do not modify

package com.kylepeplow.gamestracker.transmission;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Game extends Table {
  public static Game getRootAsGame(ByteBuffer _bb) { return getRootAsGame(_bb, new Game()); }
  public static Game getRootAsGame(ByteBuffer _bb, Game obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Game __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long code() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateCode(long code) { int o = __offset(6); if (o != 0) { bb.putLong(o + bb_pos, code); return true; } else { return false; } }
  public Platform systems(int j) { return systems(new Platform(), j); }
  public Platform systems(Platform obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int systemsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public boolean finished() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean mutateFinished(boolean finished) { int o = __offset(10); if (o != 0) { bb.put(o + bb_pos, (byte)(finished ? 1 : 0)); return true; } else { return false; } }
  public boolean complete() { int o = __offset(12); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean mutateComplete(boolean complete) { int o = __offset(12); if (o != 0) { bb.put(o + bb_pos, (byte)(complete ? 1 : 0)); return true; } else { return false; } }

  public static int createGame(FlatBufferBuilder builder,
      int nameOffset,
      long code,
      int systemsOffset,
      boolean finished,
      boolean complete) {
    builder.startObject(5);
    Game.addCode(builder, code);
    Game.addSystems(builder, systemsOffset);
    Game.addName(builder, nameOffset);
    Game.addComplete(builder, complete);
    Game.addFinished(builder, finished);
    return Game.endGame(builder);
  }

  public static void startGame(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addCode(FlatBufferBuilder builder, long code) { builder.addLong(1, code, 0L); }
  public static void addSystems(FlatBufferBuilder builder, int systemsOffset) { builder.addOffset(2, systemsOffset, 0); }
  public static int createSystemsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSystemsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addFinished(FlatBufferBuilder builder, boolean finished) { builder.addBoolean(3, finished, false); }
  public static void addComplete(FlatBufferBuilder builder, boolean complete) { builder.addBoolean(4, complete, false); }
  public static int endGame(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

