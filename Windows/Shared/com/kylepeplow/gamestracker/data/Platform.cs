// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace com.kylepeplow.gamestracker.data
{

using global::System;
using global::FlatBuffers;

public struct Platform : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Platform GetRootAsPlatform(ByteBuffer _bb) { return GetRootAsPlatform(_bb, new Platform()); }
  public static Platform GetRootAsPlatform(ByteBuffer _bb, Platform obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Platform __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public Format Format { get { int o = __p.__offset(8); return o != 0 ? (Format)__p.bb.GetSbyte(o + __p.bb_pos) : Format.Physical; } }

  public static Offset<Platform> CreatePlatform(FlatBufferBuilder builder,
      uint id = 0,
      StringOffset nameOffset = default(StringOffset),
      Format format = Format.Physical) {
    builder.StartObject(3);
    Platform.AddName(builder, nameOffset);
    Platform.AddId(builder, id);
    Platform.AddFormat(builder, format);
    return Platform.EndPlatform(builder);
  }

  public static void StartPlatform(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddFormat(FlatBufferBuilder builder, Format format) { builder.AddSbyte(2, (sbyte)format, 0); }
  public static Offset<Platform> EndPlatform(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Platform>(o);
  }
};


}
